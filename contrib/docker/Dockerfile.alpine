#
# Copyright (C) 2025 The pgagroal community
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list
# of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this
# list of conditions and the following disclaimer in the documentation and/or other
# materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may
# be used to endorse or promote products derived from this software without specific
# prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
# THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

FROM alpine:latest

# Install only essential dependencies
RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories && \
    echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories && \
    apk update && \
    apk add --no-cache \
    # Build dependencies
    git gcc cmake make \
    libpq-dev musl-dev libev-dev \
    zlib-dev zstd-dev lz4-dev bzip2-dev \
    yaml-dev libatomic linux-headers \
    py3-docutils \
    pandoc \
    texlive texmf-dist \
    doxygen graphviz \
    # Runtime dependencies  
    libpq libev yaml bzip2 libatomic zstd lz4-libs \
    postgresql17 \
    postgresql17-client \
    bash \
    ca-certificates \
    bash ca-certificates liburing-dev 

# Create pgagroal user
RUN adduser -D -s /bin/sh pgagroal

# Set working directory
WORKDIR /src

# Copy source code
COPY --chown=pgagroal:pgagroal . .

# Build and install pgagroal
RUN rm -rf CMakeCache.txt CMakeFiles build && \
    mkdir build && \
    cd build && \
    cmake -DCMAKE_INSTALL_PREFIX=/usr/local/ \
        -DBUILD_DOCS=OFF \
        -DBUILD_MAN=OFF .. && \
    make -j$(nproc) && \
    make install

# Create configuration directory and copy configs
RUN mkdir -p /etc/pgagroal && \
    chown -R pgagroal:pgagroal /etc/pgagroal

# Copy configuration files  
COPY --chown=pgagroal:pgagroal contrib/docker/pgagroal.conf contrib/docker/pgagroal_hba.conf /etc/pgagroal/

# Clean up build dependencies to reduce image size
RUN apk del git gcc cmake make libpq-dev musl-dev libev-dev \
    zlib-dev zstd-dev lz4-dev bzip2-dev yaml-dev linux-headers

# Expose ports
EXPOSE 2345 2346

# Switch to pgagroal user
USER pgagroal

# Start pgagroal
CMD ["/usr/local/bin/pgagroal", "-c", "/etc/pgagroal/pgagroal.conf", "-a", "/etc/pgagroal/pgagroal_hba.conf"]