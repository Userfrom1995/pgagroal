# Copyright (C) 2025 The pgagroal community
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list
# of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this
# list of conditions and the following disclaimer in the documentation and/or other
# materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may
# be used to endorse or promote products derived from this software without specific
# prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
# THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

FROM rockylinux:9

# Install EPEL and enable repositories
RUN rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm && \
    dnf -y upgrade && \
    dnf install -y dnf-plugins-core && \
    dnf config-manager --set-enabled crb && \
    dnf makecache

# Install dependencies
RUN dnf -y update && \
    dnf -y install --allowerasing \
      git gcc clang cmake make \
      libev libev-devel openssl-devel systemd-devel \
      zlib zlib-devel libzstd-devel lz4-devel  \
      libssh-devel libcurl-devel libatomic \
      python3-docutils bzip2-devel libarchive-devel \
      net-tools check check-devel graphviz \
      doxygen pandoc texlive texlive-latex \
      python3-pip curl ca-certificates wget \
      libasan libubsan libstdc++-devel liburing-devel libgcc glibc-devel \
      gawk coreutils findutils iproute && \
    dnf clean all

# Create pgagroal user
RUN useradd --create-home --shell /bin/bash pgagroal

# Set working directory
WORKDIR /src

# Copy source code
COPY --chown=pgagroal:pgagroal . .

# Build and install pgagroal
RUN rm -rf CMakeCache.txt CMakeFiles build && \
    mkdir build && \
    cd build && \
    cmake -DCMAKE_INSTALL_PREFIX=/usr/local/ \
        -DCMAKE_INSTALL_LIBDIR=lib \
        -DCMAKE_INSTALL_RPATH=/usr/local/lib \
        -DBUILD_DOCS=OFF \
        -DBUILD_MAN=OFF .. && \
    make -j$(nproc) && \
    make install

# Create configuration directory and copy configs
RUN mkdir -p /etc/pgagroal && \
    chown -R pgagroal:pgagroal /etc/pgagroal

# Copy configuration files
COPY --chown=pgagroal:pgagroal contrib/docker/pgagroal.conf contrib/docker/pgagroal_hba.conf /etc/pgagroal/

# Clean up build dependencies to reduce image size
RUN dnf remove -y git gcc cmake make postgresql-devel libpq-devel \
    zlib-devel libzstd-devel lz4-devel bzip2-devel libyaml-devel \
    systemd-devel openssl-devel python3-docutils pandoc texlive \
    doxygen graphviz && \
    dnf clean all

# Expose ports
EXPOSE 2345 2346

# Switch to pgagroal user
USER pgagroal

# Start pgagroal
CMD ["/usr/local/bin/pgagroal", "-c", "/etc/pgagroal/pgagroal.conf", "-a", "/etc/pgagroal/pgagroal_hba.conf"]